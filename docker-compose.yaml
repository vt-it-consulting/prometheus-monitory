version: "2.4"

# x-logs:
#   &json-logging
#   driver: "json-file"
#   options:
#     max-size: "200m"
#     max-file: "5"

# x-logs:
#   &loki-logging
#   driver: loki
#   options:
#     loki-url: "http://localhost:3100/loki/api/v1/push"

services:
  standalone-exporter:
    build:
      context: custom-exporter/standalone
      dockerfile: Dockerfile 
    restart: unless-stopped
    entrypoint: [ "python", "prometheus-export-system-metrics.py" ]
    ports:
      - 9999:9999
    networks:
      - monitoring

  # in-app-exporter:
  #   build:
  #     context: custom-exporter/in-app
  #     dockerfile: Dockerfile 
  #   restart: unless-stopped
  #   ports:
  #     - 9998:9999
  #   networks:
  #     - monitoring

  # geth-mainnet:
  #   image: ethereum/client-go:v1.10.16
  #   command: ["--http", "--http.addr", "geth-mainnet", "--http.vhosts", "*", "--gcmode", "full", "--mainnet", "--metrics", "--pprof", "--pprof.addr", "0.0.0.0"]
  #   ports:
  #     - 6060:6060
  #   networks:
  #     - monitoring

  # node-exporter:
  #   image: prom/node-exporter:latest
  #   restart: unless-stopped
  #   volumes:
  #     - /home/decentnodes:/home/decentnodes:ro # --> change directory
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - monitoring

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   restart: unless-stopped
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - monitoring

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
  #     - ./monitoring/prometheus/rules.yml:/etc/prometheus/rules.yml
  #     - prom-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yaml'
  #     - '--storage.tsdb.retention.size=20GB'
  #   restart: unless-stopped
  #   ports:
  #     - 9090:9090
  #   networks:
  #     - monitoring
  
  # grafana:
  #   image: grafana/grafana:latest
  #   restart: unless-stopped
  #   volumes:
  #     - gf-data:/var/lib/grafana
  #     # - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
  #     # - ./monitoring/grafana/datasources/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
  #     # - ./monitoring/grafana/plugins/camptocamp-prometheus-alertmanager-datasource:/var/lib/grafana/plugins/camptocamp-prometheus-alertmanager-datasource
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PW}
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #     - GF_DATABASE_TYPE=sqlite3
  #     - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
  #     - GF_SERVER_DOMAIN=${DOMAIN}
  #     - GF_USERS_DEFAULT_THEME=dark
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - monitoring

  # alertmanager:
  #   image: prom/alertmanager:latest
  #   volumes:
  #     - ./monitoring/alertmanager/config.yml:/etc/alertmanager/config.yml
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #   restart: unless-stopped
  #   ports:
  #     - 9093:9093
  #   networks:
  #     - monitoring

  # loki:
  #   image: grafana/loki:2.5.0
  #   volumes:
  #     - ./monitoring/loki/loki-config.yaml:/etc/loki/local-config.yaml
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   networks:
  #     - monitoring

  # promtail:
  #   image: grafana/promtail:2.5.0
  #   volumes:
  #     - /var/log:/var/log
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - ./monitoring/promtail/config.yaml:/etc/promtail/promtail-config.yaml
  #   command: -config.file=/etc/promtail/config.yml
  #   networks:
  #     - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  prom-data:
  gf-data: